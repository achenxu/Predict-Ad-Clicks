# Checking for missing values variable wise
colSums(is.na(train))

set.seed(10000)
index<-sample(nrow(train),0.01*nrow(train),replace=F)
train1<-train[index,]
rm(train)
# train3<-train1[-index,]
#train1$date <- sapply(strsplit(as.character(train2$datetime), " "), "[", 1)
#train1$time <- sapply(strsplit(as.character(train2$datetime), " "), "[", 2)
#train1$countrycode<-as.factor(train2$countrycode)


train1$date=gsub(" ?[0-9]{2}:(.*)","",train1$datetime)
train1$date=gsub(" ?[0-9]{4}-[0-2]{2}-","",train1$date)
train1$date=as.numeric(train1$date)
train1$time= gsub("(.*)-[0-9]{2} ?","",train1$datetime)
train1$time=gsub(":(.*)","",train1$time)
train1$time=as.numeric(train1$time)


unique(train1$browserid)
train1$browserid=ifelse(test = train1$browserid=='Firefox' | train1$browserid=='Mozilla Firefox' |
                            train1$browserid=='Mozilla' 
                          ,yes = 'Mozilla',no = as.character(train1$browserid))

train1$browserid=ifelse(test = train1$browserid=='Google Chrome' | train1$browserid=='Chrome' 
                          ,yes = 'Chrome',no = as.character(train1$browserid))

train1$browserid=ifelse(test = train1$browserid=='IE' | train1$browserid=='InternetExplorer' 
                          ,yes = 'Internet Explorer',no = as.character(train1$browserid))
unique(train1$browserid)



train1$day=weekdays(as.Date(paste("2017-01-",train1$date,sep = "")))
#summary(setTrain)
head(train1$day)
train1$weekend=ifelse(train1$day=='Saturday' | train1$day=='Sunday',T,F)

train1$activesurff=cut(train1$time, breaks = c(0,7), right = F)  

train1$activesurff=ifelse(train1$activesurff=='[0,7)',F,T)
train1$activesurff=is.na(train1$activesurff)

train1$click=as.factor(train1$click)
train1$date=as.factor(train1$date)
train1$day=as.factor(train1$day)
train1$weekend=as.factor(train1$weekend)
train1$countrycode<-as.factor(train1$countrycode)
train1$day<-as.factor(train1$day)
train1$activesurff<-as.factor(train1$activesurff)

str(train1)



train1$browserid<-ifelse(is.na(train1$browserid),"Missing",as.character(train1$browserid))
str(train1$browserid)
train1$browserid<-as.factor(train1$browserid)

train1$devid<-ifelse(is.na(train1$devid),"Missing",as.character(train1$devid))
str(train1$devid)
train1$devid<-as.factor(train1$devid)

# removing the row with lot of missing values
#index<-which(is.na(train$click))
#train<-train[-index,]

# Again Checking for missing values variable wise
#colSums(is.na(train))

#train1<-train
#train1<-na.omit(train1)
#colSums(is.na(train1))

#str(train)
#train1$countrycode<-as.factor(train1$countrycode)
#train1$browserid<-as.factor(train1$countrycode)
#train1$devid<-as.factor(train1$devid)
str(train1)


# Random sampling


library(irr)
mod<-glm(click~.,data=train1[,-c(1,2,3,11,12)],family = "binomial")
summary(mod)


train1$browserid_edge<-ifelse(train1$browserid == "Edge", 1, 0)
test$browserid_edge<-ifelse(test$browserid == "Edge", 1, 0)

train1$browserid_missing<-ifelse(train1$browserid == "Missing", 1, 0)
test$browserid_missing<-ifelse(test$browserid == "Missing", 1, 0)

train1$browserid_mozilla<-ifelse(train1$browserid == "Mozilla", 1, 0)
test$browserid_mozilla<-ifelse(test$browserid == "Mozilla", 1, 0)

train1$browserid_opera<-ifelse(train1$browserid == "Opera", 1, 0)
test$browserid_opera<-ifelse(test$browserid == "Opera", 1, 0)

train1$day_sunday<-ifelse(train1$day == "Sunday", 1, 0)
test$day_sunday<-ifelse(test$day == "Sunday", 1, 0)

train1$day_thursday<-ifelse(train1$day == "Thursday", 1, 0)
test$day_thursday<-ifelse(test$day == "Thursday", 1, 0)

train1$day_tuesday<-ifelse(train1$day == "Tuesday", 1, 0)
test$day_tuesday<-ifelse(test$day == "Tuesday", 1, 0)



mod1<-glm(click~.,data=train1[,-c(1,2,4,5,8,11,12,13,14,15)],family = "binomial")
summary(mod1)




library(car)
vif(mod1)


unique(test$browserid)
test$browserid=ifelse(test = test$browserid=='Firefox' | test$browserid=='Mozilla Firefox' |
                          test$browserid=='Mozilla' 
                        ,yes = 'Mozilla',no = as.character(test$browserid))

test$browserid=ifelse(test = test$browserid=='Google Chrome' | test$browserid=='Chrome' 
                        ,yes = 'Chrome',no = as.character(test$browserid))

test$browserid=ifelse(test = test$browserid=='IE' | test$browserid=='InternetExplorer' 
                        ,yes = 'Internet Explorer',no = as.character(test$browserid))

colSums(is.na(test))


#choosing cutoff value according to kappa value
s<-seq(0.2,0.5,0.01)
n<-1 
a<-as.vector(length(s))
for (i in s ) {
  
  print(i)
  train2$result<-ifelse(pred>i,1,0)
  a[n]<-confusionMatrix(train2$result,train2$click,positive = "1")$overall[2]
  
  print(n)
  n=n+1
}
max(a)

head(pred)
table(train2$click)/length(train2$click)
table(train2$click,pred1)
pred1<-ifelse(pred>=0.6390773,1,0)

kappa2(data.frame(train2$click,pred))
library(caret)
confusionMatrix(pred1,train2$click,positive="1")

test$date=gsub(" ?[0-9]{2}:(.*)","",test$datetime)
test$date=gsub(" ?[0-9]{4}-[0-2]{2}-","",test$date)
test$date=as.numeric(test$date)
test$time= gsub("(.*)-[0-9]{2} ?","",test$datetime)
test$time=gsub(":(.*)","",test$time)
test$time=as.numeric(test$time)


unique(test$browserid)
test$browserid=ifelse(test = test$browserid=='Firefox' | test$browserid=='Mozilla Firefox' |
                          test$browserid=='Mozilla' 
                        ,yes = 'Mozilla',no = as.character(test$browserid))

test$browserid=ifelse(test = test$browserid=='Google Chrome' | test$browserid=='Chrome' 
                        ,yes = 'Chrome',no = as.character(test$browserid))

test$browserid=ifelse(test = test$browserid=='IE' | test$browserid=='InternetExplorer' 
                        ,yes = 'Internet Explorer',no = as.character(test$browserid))
unique(test$browserid)


test$day=weekdays(as.Date(paste("2017-01-",test$date,sep = "")))
#summary(setTrain)
head(test$day)
test$weekend=ifelse(test$day=='Saturday' | test$day=='Sunday',1,0)

test$activesurff=cut(test$time, breaks = c(0,7), right = F)  

test$activesurff=ifelse(test$activesurff=='[0,7)',F,T)
test$activesurff=is.na(test$activesurff)


test$date=as.factor(test$date)
test$day=as.factor(test$day)
test$weekend=as.factor(test$weekend)
test$countrycode<-as.factor(test$countrycode)
test$day<-as.factor(test$day)
test$activesurff<-as.factor(test$activesurff)

str(test)



test$browserid<-ifelse(is.na(test$browserid),"Missing",as.character(test$browserid))
str(test$browserid)
test$browserid<-as.factor(test$browserid)

test$devid<-ifelse(is.na(test$devid),"Missing",as.character(test$devid))
str(test$devid)
test$devid<-as.factor(test$devid)



test$browserid_edge<-ifelse(test$browserid == "Edge", 1, 0)

test$browserid_missing<-ifelse(test$browserid == "Missing", 1, 0)

test$browserid_mozilla<-ifelse(test$browserid == "Mozilla", 1, 0)

test$browserid_opera<-ifelse(test$browserid == "Opera", 1, 0)

test$day_sunday<-ifelse(test$day == "Sunday", 1, 0)

test$day_thursday<-ifelse(test$day == "Thursday", 1, 0)

test$day_tuesday<-ifelse(test$day == "Tuesday", 1, 0)


pred2<-predict(mod1,type="response",newdata = train1)
head(pred2)
#choosing cutoff value according to kappa value
library(caret)
s<-seq(0.2,0.5,0.01)
n<-1 
a<-as.vector(length(s))
for (i in s ) {
  
  print(i)
  train1$result<-ifelse(pred2>i,1,0)
  a[n]<-confusionMatrix(train1$result,train1$click,positive = "1")$overall[2]
  
  print(n)
  n=n+1
}
max(a)

head(pred2)
table(train1$click)/length(train1$click)

pred3<-ifelse(pred2>=0.6234542,1,0)

kappa2(data.frame(train1$click,pred3))
library(caret)
confusionMatrix(pred3,train1$click,positive="1")

pred4<-predict(mod1,type="response",newdata = test)
head(pred4)

pred5<-ifelse(pred4>=0.6234542,1,0)
test$click<-pred5
submission=test[,c(1,22)]
write.csv(x = submission,file = 'C:\\Users\\Subhranil\\Desktop\\HE\\sub2.csv',row.names = F)

getwd()
length(pred5)
#ROCR Curve
library(ROCR)
pred5<-prediction(pred3,train1$click)
pref<-performance(pred5,"tpr","fpr")
plot(pref,col="red")
abline(0,1,lty=8,col="grey")
auc<-performance(pred5,"auc")
auc
auc<-unlist(slot(auc,"y.values"))
auc



